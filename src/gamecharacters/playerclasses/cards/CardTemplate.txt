import { PlayableCard } from '../../../PlayableCard';
import { BaseCharacter } from '../../../BaseCharacter';
import { Burning } from '../../../buffs/standard/Burning';
import { TargetingType } from '../../../AbstractCard';
import { AbstractBuff } from '../../../buffs/AbstractBuff';
import { IBaseCharacter } from '../../../IBaseCharacter';

export class <CARD_NAME> extends PlayableCard {
  constructor() {
    super({
      name: 'CARD_NAME',
      portraitName: 'CARD_PORTRAIT_NAME',
      targetingType: TargetingType.ENEMY,
    });
    this.baseDamage = 13;
    this.energyCost = 2;
    this.baseMagicNumber = 2;
    this.baseBlock = 5;
    this.buffs.push(new AxeCritBuff());
  }

  override get description(): string {
    return `Deal ${this.getDisplayedDamage()} damage.  Receieve ${this.getDisplayedBlock()} block.  Crits against burning enemies.`;
  }

  override InvokeCardEffects(target?: BaseCharacter): void {
    this.dealDamageToTarget(target);
  }
}

// Buff template
class <BUFF_NAME> extends AbstractBuff {
  constructor() {
    super();
    this.imageName = "<image_name>";
    this.stackable = true;//typically
  }

  override getName(): string {
    return "<NAME>";
  }

  override getDescription(): string {
    return "increases damage by ${this.getStacksDisplayText()}.";
  }

}